[
  {
    "task_id": "alzheimer-mouse",
    "name": "Alzheimer Mouse Models: Comparative Pathway Analysis",
    "description": "Analyze 5xFAD, 3xTG-AD, and PS301S mouse models: normalize counts, perform differential expression, run KEGG pathway enrichment, and compare shared pathways across models.",
    "task_prompt": "Perform a comparative differential expression analysis of three different Alzheimer's Disease mouse models (5xFAD, 3xTG-AD, and PS3O1S) to identify shared molecular KEGG pathways. The output should be a CSV file with the following columns: 'pathway','5xFAD_pvalue','3xTG_AD_pvalue','PS3O1S_pvalue'. Example csv <example>Pathway,5xFAD_pvalue,3xTG_AD_pvalue,PS3O1S_pvalue\nPhagosome Homo sapiens hsa04145,1.5045916403148935e-09,0.3102788532065793,0.4443015705596512\n</example> ",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b20d383e0a583200f9906f/"
        }
      ],
      "reference_data": [],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/68336626b5864b789da4dc7f/"
        }
      ]
    }
  },
  {
    "task_id": "comparative-genomics",
    "name": "Comparative Genomics: Co-evolving Gene Clusters",
    "description": "The datasets consists FASTA sequences and GFF annotations of a microbial genome for Micrococcus. The goal of is to do phylogenetic reconstruction of clusters of orthologous co-evolving genes; identify functionally conserved gene clusters across the genomes and group them into co-evolving functional modules. The COGs needs to be filtered based on the following quality criteria.",
    "task_prompt": "Reconstruct phylogeny and identify COGs across four Micrococcus genomes; filter clusters present in all genomes, coding-only, with high-confidence annotations. The output should be a CSV file with the following columns: 'cluster_number, 'consensus_annotation'.<example>cluster_number,consensus_annotation\n1,K07222  K07222, putative flavoprotein involved in K+ transport\n2,K01069  gloB, gloC, HAGH, hydroxyacylglutathione hydrolase [EC:3.1.2.6]\n</example>",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b20d89324caca584780a19/"
        }
      ],
      "reference_data": [
        {
          "filename": "actinobacteria.tar.gz",
          "url": "https://osf.io/download/688634a1c0fb9e14f4f27c3d/"
        }
      ],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/6886330d335b56867ee7cc56/"
        }
      ]
    }
  },
  {
    "task_id": "cystic-fibrosis",
    "name": "Cystic Fibrosis Mendelian Variant Identification",
    "description": "The sample dataset is a simulated dataset for finding the generic cause of Cystic fibrosis. The dataset is real sequencing data from CEPH_1463 dataset provided by the Complete Genomics Diversity Panel. It consists of sequencing of a family: 4 grandparents, 2 parents and 11 siblings. A known Mandelian disease mutation has been added on three siblings, taking care to be consistent with the underlying heplotype structure. The goal is to find the mutation causing the mendalian recessive trait - Cystic Fibrosis.",
    "task_prompt": "Find the genetic cause of Cystic fibrosis; identify the causal recessive variant consistent with affected siblings NA12885, NA12886, and NA12879. The output should be a CSV file with the following columns: chromosome,position,variant_id,reference,alternate,gene_name,gene_id,annotation,impact,transcript_id,hgvs_c,hgvs_p,clinical_significance,diseases,review_status,rs_id. <example>chromosome,position,variant_id,reference,alternate,gene_name,gene_id,annotation,impact,transcript_id,hgvs_c,hgvs_p,clinical_significance,diseases,review_status,rs_id\nX,123456789,VAR123,A,G,GENE1,ENSG00000000001,missense_variant,MODERATE,ENST00000000001,c.123A>G,p.Lys41Arg,Likely_pathogenic,Disease_A; Disease_B; not_provided,reviewed_by_expert_panel,rs0000001</example>",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b20df289a6df6718780c40/"
        }
      ],
      "reference_data": [
        {
          "filename": "clinvar_20250521.vcf.gz",
          "url": "https://osf.io/download/68345adb08d1077918ab8378/"
        }
      ],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/v8egn/"
        }
      ]
    }
  },
  {
    "task_id": "deseq",
    "name": "RNA-Seq Differential Expression (DESeq2)",
    "description": "The dataset consists of RNA-Seq samples from Candida parapsilosis wild-type (WT) strains grown in planktonic and biofilm conditions, generated as part of a study on gene expression and biofilm formation. The samples were sequenced on the Illumina HiSeq 2000 platform. The goal of this analysis is to perform differential expression analysis using DESeq2 to identify genes that are significantly up- or down-regulated between planktonic and biofilm conditions, providing insights into biofilm-associated transcriptional changes.",
    "task_prompt": "Identify differentialy expressed genes between planktonic and biofilm conditions of Candida parapsilosis. The output should be a CSV file with the following columns.",
    "download_urls": {
      "data": [
        {
          "filename": "SRR1278968.tar.gz",
          "url": "https://osf.io/download/68468fe0b8c35b8d7fd6a397/"
        },
        {
          "filename": "SRR1278969.tar.gz",
          "url": "https://osf.io/download/68468dc10781da6500a4da4f/"
        },
        {
          "filename": "SRR1278970.tar.gz",
          "url": "https://osf.io/download/68469352ccfa808c4bd6a429/"
        },
        {
          "filename": "SRR1278971.tar.gz",
          "url": "https://osf.io/download/684694513564c1f16c85b2b5/"
        },
        {
          "filename": "SRR1278972.tar.gz",
          "url": "https://osf.io/download/6846941a3564c1f16c85b2a7/"
        },
        {
          "filename": "SRR1278973.tar.gz",
          "url": "https://osf.io/download/68b0afa67f881b4d577da9f7/"
        }
      ],
      "reference_data": [
        {
          "filename": "reference.tar.gz",
          "url": "https://osf.io/download/6846a111dfcfcd74e2ab813b/"
        }
      ],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/68b0b0fba826cb07ed161e64/"
        }
      ]
    }
  },
  {
    "task_id": "evolution",
    "name": "Experimental Evolution Variant Calling (E. coli)",
    "description": "The experiment follows a similar strategy as in what is called an experimental evolution experiment. The final aim is to identify the genome variations in evolved lines of E. coli. The data is composed of a single ancestor line and two evolved lines. The data is from a paired-end sequencing run data from an Illumina HiSeq. This data has been post-processed in two ways already. All sequences that were identified as belonging to the PhiX genome have been removed. Illumina adapters have been removed as well already.",
    "task_prompt": "Identify and annotate genome variants in two evolved lines relative to an ancestor lines of E. coli; report only variants shared by both evolved lines of moderate or higher predicted severity. The output should be a CSV file with the following columns: 'chrom','pos','ref','alt','gene','impact','effect',status'.<example>CHROM,POS,REF,ALT,GENE,IMPACT,EFFECT,STATUS\nNODE_4_length_102007_cov_6.351643,6352,T,C,ICCIAKIK_00327,MODERATE,missense_variant,shared</example>",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b2105d035f781d2805e42f/"
        }
      ],
      "reference_data": [],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/688a0db3222020edd0e7cc66/"
        }
      ]
    }
  },
  {
    "task_id": "giab",
    "name": "GIAB Variant Calling (NA12878 chr20 subset)",
    "description": "The GIAB dataset consists of Agilent SureSelect v7 exome sequencing (~75M reads) from the NA12878 reference sample, providing high-confidence benchmark variants on GRCh38. The task is to perform germline variant callin on NA12878.",
    "task_prompt": "Use the sequencing data from NA12878 (Agilent SureSelect v7, ~75M reads) to perform germline variant calling. The output should be a .vcf.gz variant call file.",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b48a274bd046405df90c9c/"
        }
      ],
      "reference_data": [
        {
          "filename": "reference.tar.gz",
          "url": "https://osf.io/download/689ca8f0f375f799101f201d/"
        }
      ],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/689caa007283d4d1371f1f5a/"
        }
      ]
    }
  },
  {
    "task_id": "metagenomics",
    "name": "Metagenomics: Community Comparison (Cuatro Ciénegas)",
    "description": "The metagenomics dataset consists of sequencing reads from the Cuatro Ciénegas Basin, comparing microbial communities under control (JC1A) and nutrient-enriched (JP4D) conditions. The task is to profile taxonomic composition and report relative abundances of bacterial taxa.",
    "task_prompt": "Perform metagenomic analysis of control (JC1A) and fertilized (JP4D) samples to classify microbial taxa and estimate relative abundances. The output should be a CSV file with the following columns: 'OTU','Kingdom','Phylum','JP4D','JC1A'.<example>OTU,Kingdom,Phylum,JP4D,JC1A\n2771361,Bacteria,Pseudomonadota,84.8612882653061,66.4367816091954</example>",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b216b7f757a5ccb105e32f/"
        }
      ],
      "reference_data": [
        {
          "filename": "k2_standard_16gb_20241228.tar.gz",
          "url": "https://genome-idx.s3.amazonaws.com/kraken/k2_standard_16gb_20241228.tar.gz"
        }
      ],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/688c803bf191a05eb312ff76/"
        }
      ]
    }
  },
  {
    "task_id": "single-cell",
    "name": "Single-cell RNA-seq: Skeletal Muscle Exercise Response",
    "description": "The single-cell RNA-seq dataset consists of human skeletal muscle samples collected before and after acute exercise, sequenced with 10X Genomics. The task is to identify cell types and determine their transcriptional responses to exercise.",
    "task_prompt": "Analyze single-cell RNA-seq data from pre- and post-exercise skeletal muscle samples. Perform clustering, cell type identification, and differential expression analysis within each cell type between conditions. The output should be a CSV file with the following columns: 'cluster_id','predicted_cell_type','gene_name','logfoldchanges','pvals','pvals_adj','direction','abs_logfc'.<example>cluster_id,predicted_cell_type,gene_name,logfoldchanges,pvals,pvals_adj,direction,abs_logfc\n0,Perivascular cell,RNASE1,-6.658449,3.443035537523368e-15,6.886071075046736e-12,down,6.658449</example>",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b213c2e5d5269d1805e57b/"
        }
      ],
      "reference_data": [
        {
          "filename": "reference.tar.gz",
          "url": "https://osf.io/download/688e6d05f99f6f9bdec3570d/"
        }
      ],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/68b20ccefd1e1bfb14ab157f/"
        }
      ]
    }
  },
  {
    "task_id": "transcript-quant",
    "name": "Transcript Quantification (Simulated RNA-Seq)",
    "description": "The goal is to quantify transcript expression levels from paired-end RNA-Seq reads (reads_1.fq.gz, reads_2.fq.gz) using the provided reference transcriptome (transcriptome.fa). Because the data is simulated, the quantification should exactly reproduce the underlying counts. The results represent a mapping from transcript IDs → read counts.",
    "task_prompt": "Perform transcript quantification on the provided paired-end RNA-Seq reads using the transcriptome reference. The output should be a .tsv file with the following columns:'transcript_id'\t'count'.<example>transcript_id\tcount\nENST000000001\t523</example>",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b2141b8f0cf7d351f99175/"
        }
      ],
      "reference_data": [],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/684fefc073a328e5cbb689c8/"
        }
      ]
    }
  },
  {
    "task_id": "viral-metagenomics",
    "name": "Viral Metagenomics: Species Identification (Dolphin)",
    "description": "The viral metagenomics dataset consists of paired-end sequencing reads from a dolphin with gastroenteritis of suspected viral origin. The task is to identify viral species present in the fecal sample by assembling and classifying contigs.",
    "task_prompt": "Analyze paired-end metagenomic sequencing data from a dolphin fecal sample to identify potential viral agents. Assemble and classify contigs, then summarize results by taxonomic domain and species. The output should be a CSV file with the following columns: 'contig_count','domain','species'.<example>contig_count,domain,species\n2,Viruses,H1N1 5\n68,Unclassified,</example>",
    "download_urls": {
      "data": [
        {
          "filename": "data.tar.gz",
          "url": "https://osf.io/download/68b2149b6d0bf0c31e05e6fd/"
        }
      ],
      "reference_data": [
        {
          "filename": "reference-data.tar.gz",
          "url": "https://osf.io/download/683423565d0944b2b685b1bd/"
        },
        {
          "filename": "kaiju_db_viruses_2024-08-15.tgz",
          "url": "https://osf.io/download/6833926d0c80ee431a85b55e/"
        }
      ],
      "results": [
        {
          "filename": "results.tar.gz",
          "url": "https://osf.io/download/6833945c0c26956233a4db0e/"
        }
      ]
    }
  }
]
